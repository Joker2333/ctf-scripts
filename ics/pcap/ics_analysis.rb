#!/usr/bin/env ruby
# 
# Author L
#

CommentMap = {
  'mms.confirmedServiceRequest' => {
     "0" => "status",
     "1" => "getNameList",
     "2" => "identify",
     "3" => "rename",
     "4" => "read",
     "5" => "write",
     "6" => "getVariableAccessAttributes",
     "7" => "defineNamedVariable",
     "8" => "defineScatteredAccess",
     "9" => "getScatteredAccessAttributes",
    "10" => "deleteVariableAccess",
    "11" => "defineNamedVariableList",
    "12" => "getNamedVariableListAttributes",
    "13" => "deleteNamedVariableList",
    "14" => "defineNamedType",
    "15" => "getNamedTypeAttributes",
    "16" => "deleteNamedType",
    "17" => "input",
    "18" => "output",
    "19" => "takeControl",
    "20" => "relinquishControl",
    "21" => "defineSemaphore",
    "22" => "deleteSemaphore",
    "23" => "reportSemaphoreStatus",
    "24" => "reportPoolSemaphoreStatus",
    "25" => "reportSemaphoreEntryStatus",
    "26" => "initiateDownloadSequence",
    "27" => "downloadSegment",
    "28" => "terminateDownloadSequence",
    "29" => "initiateUploadSequence",
    "30" => "uploadSegment",
    "31" => "terminateUploadSequence",
    "32" => "requestDomainDownload",
    "33" => "requestDomainUpload",
    "34" => "loadDomainContent",
    "35" => "storeDomainContent",
    "36" => "deleteDomain",
    "37" => "getDomainAttributes",
    "38" => "createProgramInvocation",
    "39" => "deleteProgramInvocation",
    "40" => "start",
    "41" => "stop",
    "42" => "resume",
    "43" => "reset",
    "44" => "kill",
    "45" => "getProgramInvocationAttributes",
    "46" => "obtainFile",
    "47" => "defineEventCondition",
    "48" => "deleteEventCondition",
    "49" => "getEventConditionAttributes",
    "50" => "reportEventConditionStatus",
    "51" => "alterEventConditionMonitoring",
    "52" => "triggerEvent",
    "53" => "defineEventAction",
    "54" => "deleteEventAction",
    "55" => "getEventActionAttributes",
    "56" => "reportEventActionStatus",
    "57" => "defineEventEnrollment",
    "58" => "deleteEventEnrollment",
    "59" => "alterEventEnrollment",
    "60" => "reportEventEnrollmentStatus",
    "61" => "getEventEnrollmentAttributes",
    "62" => "acknowledgeEventNotification",
    "63" => "getAlarmSummary",
    "64" => "getAlarmEnrollmentSummary",
    "65" => "readJournal",
    "66" => "writeJournal",
    "67" => "initializeJournal",
    "68" => "reportJournalStatus",
    "69" => "createJournal",
    "70" => "deleteJournal",
    "71" => "getCapabilityList",
    "72" => "fileOpen",
    "73" => "fileRead",
    "74" => "fileClose",
    "75" => "fileRename",
    "76" => "fileDelete",
    "77" => "fileDirectory"
  },
  'mms.confirmedServiceResponse' => {
     "0" => "status",
     "1" => "getNameList",
     "2" => "identify",
     "3" => "rename",
     "4" => "read",
     "5" => "write",
     "6" => "getVariableAccessAttributes",
     "7" => "defineNamedVariable",
     "8" => "defineScatteredAccess",
     "9" => "getScatteredAccessAttributes",
    "10" => "deleteVariableAccess",
    "11" => "defineNamedVariableList",
    "12" => "getNamedVariableListAttributes",
    "13" => "deleteNamedVariableList",
    "14" => "defineNamedType",
    "15" => "getNamedTypeAttributes",
    "16" => "deleteNamedType",
    "17" => "input",
    "18" => "output",
    "19" => "takeControl",
    "20" => "relinquishControl",
    "21" => "defineSemaphore",
    "22" => "deleteSemaphore",
    "23" => "reportSemaphoreStatus",
    "24" => "reportPoolSemaphoreStatus",
    "25" => "reportSemaphoreEntryStatus",
    "26" => "initiateDownloadSequence",
    "27" => "downloadSegment",
    "28" => "terminateDownloadSequence",
    "29" => "initiateUploadSequence",
    "30" => "uploadSegment",
    "31" => "terminateUploadSequence",
    "32" => "requestDomainDownLoad",
    "33" => "requestDomainUpload",
    "34" => "loadDomainContent",
    "35" => "storeDomainContent",
    "36" => "deleteDomain",
    "37" => "getDomainAttributes",
    "38" => "createProgramInvocation",
    "39" => "deleteProgramInvocation",
    "40" => "start",
    "41" => "stop",
    "42" => "resume",
    "43" => "reset",
    "44" => "kill",
    "45" => "getProgramInvocationAttributes",
    "46" => "obtainFile",
    "72" => "fileOpen",
    "47" => "defineEventCondition",
    "48" => "deleteEventCondition",
    "49" => "getEventConditionAttributes",
    "50" => "reportEventConditionStatus",
    "51" => "alterEventConditionMonitoring",
    "52" => "triggerEvent",
    "53" => "defineEventAction",
    "54" => "deleteEventAction",
    "55" => "getEventActionAttributes",
    "56" => "reportActionStatus",
    "57" => "defineEventEnrollment",
    "58" => "deleteEventEnrollment",
    "59" => "alterEventEnrollment",
    "60" => "reportEventEnrollmentStatus",
    "61" => "getEventEnrollmentAttributes",
    "62" => "acknowledgeEventNotification",
    "63" => "getAlarmSummary",
    "64" => "getAlarmEnrollmentSummary",
    "65" => "readJournal",
    "66" => "writeJournal",
    "67" => "initializeJournal",
    "68" => "reportJournalStatus",
    "69" => "createJournal",
    "70" => "deleteJournal",
    "71" => "getCapabilityList",
    "73" => "fileRead",
    "74" => "fileClose",
    "75" => "fileRename",
    "76" => "fileDelete",
    "77" => "fileDirectory"
  },
  "s7comm.param.func" => {
    "0x00000000" => "CPU services",
	  "0x000000f0" => "Setup communication",
	  "0x00000004" => "Read Var",
	  "0x00000005" => "Write Var",
	  "0x0000001a" => "Request download",
	  "0x0000001b" => "Download block",
	  "0x0000001c" => "Download ended",
	  "0x0000001d" => "Start upload",
	  "0x0000001e" => "Upload",
	  "0x0000001f" => "End upload",
	  "0x00000028" => "PI-Service",
	  "0x00000029" => "PLC Stop"
	},
  "modbus.func_code" => {
		 "1" => "Read Coils",
		 "2" => "Read Discrete Inputs",
		 "3" => "Read Holding Registers",
		 "4" => "Read Input Registers",
		 "5" => "Write Single Coil",
		 "6" => "Write Single Register",
		 "7" => "Read Exception Status",
		 "8" => "Diagnostics",
		"11" => "Get Comm. Event Counters",
		"12" => "Get Comm. Event Log",
		"15" => "Write Multiple Coils",
		"16" => "Write Multiple Registers",
		"17" => "Report Slave ID",
		"20" => "Read File Record",
		"21" => "Write File Record",
		"22" => "Mask Write Register",
		"23" => "Read Write Register",
		"24" => "Read FIFO Queue",
		"43" => "Encapsulated Interface Transport",
		"90" => "Unity (Schneider)"
	},
  "cotp.type" => {
		"0x00000001" => "ED Expedited Data",
		"0x00000002" => "EA Expedited Data Acknowledgement",
		"0x00000004" => "UD",
		"0x00000005" => "RJ Reject",
		"0x00000006" => "AK Data Acknowledgement",
		"0x00000007" => "ER TPDU Error",
		"0x00000008" => "DR Disconnect Request",
		"0x0000000c" => "DC Disconnect Confirm",
		"0x0000000d" => "CC Connect Confirm",
		"0x0000000e" => "CR Connect Request",
		"0x0000000f" => "DT Data",
	}
}

if ARGV.size != 2
  puts 'Usage: ./ics_analysis.rb <pcap_file> <analysis_field>'
  puts 'Common Field'
  puts CommentMap.keys.map{|x| '  ' + x}
  exit
end

pcap_file = ARGV[0]
field = ARGV[1]

puts "Analyzing..."
puts

data = `tshark -r '#{pcap_file}' -Y #{field} -T fields -e #{field}`.lines(chomp: true)
field_count = data.group_by(&:itself).transform_values(&:size)
total = field_count.values.sum

field_count.sort_by(&:last).each do |value, count|
  comment = CommentMap.dig(field, value)
  comment = "[#{comment}]" if comment
  puts "(%05.2f%%) %4s => %-10s #{comment}" % [(count / total.to_f) * 100, count, value]
end

puts
puts "Keys: #{field_count.size}, Total: #{total}"
